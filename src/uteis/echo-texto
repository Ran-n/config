#! /bin/sh
# -*- coding: utf-8 -*-
# ------------------------------------------------------------------------------
#+ Autor:  	Ran#
#+ Creado: 	2022/10/06 20:14:30.260275
#+ Editado:	2022/11/01 14:54:22.586270
# ------------------------------------------------------------------------------

#* Script para sacar o texto correcto no idioma correcto.
#* Script to prompt text in the correct language.

FICH="media/i18n.csv"
FICH_LINGUAS="media/linguas.csv"

SEP=$(src/uteis/trae-var -v csv_separator)
SEP_CATEX=$(src/uteis/trae-var -v csv_string)

while getopts "l:i:p:" o; do
    case "${o}" in
        l)
            lang="$OPTARG"
            ;;
        i)
            id="$OPTARG"
            ;;
        p)
            position="$OPTARG"
            ;;
        #s)
    esac
done


sacar_catex(){
    # se mete " dentro do string
    echo "$(grep ^"$1$SEP$lang" "$FICH" | cut -d$SEP -f"$position" | cut -d$SEP_CATEX -f2- | rev | cut -d$SEP_CATEX -f2- | rev)"
}

mostrar() {
    # se hai texto
    if [[ -n "$1" ]]; then
        precomando=$(echo -e "$1" | cut -d\\ -f1)
        comando=$(echo -e "$1" | cut -d\\ -f2)
        poscomando=$(echo -e "$1" | cut -d\\ -f3-)

        # se o pre e o pos son iguais, non hai comando
        [[ "$precomando" == "$poscomando" ]]\
            && echo -e "$1"\
            || echo -e "$precomando"$($comando)"$(mostrar "$poscomando")"
    else
        [[ -z $(grep "^""$lang" "$FICH_LINGUAS") ]] && {
            unset lang
            sacar_catex "mensaxe.erro.non_existe_lingua"
        } || {
            sacar_catex "mensaxe.erro.non_existe_mensaxe"
        }
    fi
}

[[ -z "$position" ]] && position=3

#[[ -n "$lang" && -n "$id" ]]\
[[ -n "$id" ]]\
    && texto=$(sacar_catex "$id")

mostrar "$texto"
